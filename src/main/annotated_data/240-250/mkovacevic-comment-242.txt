/// <summary>
/// Metoda vraca razliku susednih elemenata niza kao novi niz.
/// </summary>
/// <param name="n"></param>
/// <returns></returns>

public static double[] Diff(this IEnumerable<double> n)
{
    if (n == null)
        throw new Exception("Input value must not be null.");

    double[] result = new double[Math.Max(n.Count() - 1, 0)];

    if (result.Length == 0)
        return result;

    IEnumerator<double> enumN = n.GetEnumerator();
    enumN.MoveNext();
    double prev = enumN.Current;
    int count = 0;

    while (enumN.MoveNext())
    {
        result[count] = enumN.Current - prev;
        prev = enumN.Current;
        count++;
    }
    return result;
}

https://github.com/jasaleja/SDD_projekat/blob/5dbfa6e73fd177e1e59790d950cf8761a5fc0fae/SDDLibrary/Utils/HelperMethods.cs