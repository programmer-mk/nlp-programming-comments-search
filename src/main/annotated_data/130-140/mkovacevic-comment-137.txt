// Stavlja vezu izmedju tacka Pocetak i Kraj i vraca stavljene veze.
// Dodaje nove veze samo na onim mestima
// na kojima one ne postoje(eventualne veze koje postoje izmedju Pocetak i Kraj
// se preskacu). Na taj nacin, broj stavljenih veza moze da bude nula (ako
// izmedju Pocetak i Kraj vec postoji veza), jedan (ako ne postoje ni veza ni
// cvor), ili vise od jedan (ako postoji jedan ili vise cvorova, ili ako na
// nekim delovima izmedju Pocetak i Kraj postoje veze a na nekim ne).

public void spojiTacke(Point pocetak, Point kraj, List<Veza> veze)
{
    if (pocetak == kraj)
        // pocetak i kraj se poklapaju
        return;
    Cvor pocCvor = dajCvor(pocetak);
    if (pocCvor == null)
        pocCvor = noviCvor(pocetak);
    Cvor krajCvor = dajCvor(kraj);
    if (krajCvor == null)
        krajCvor = noviCvor(kraj);

    Pravac pravac;
    Smer prethHor = new Smer(), sledHor = new Smer(), prethVert = new Smer(),
        sledVert = new Smer(), tmp = new Smer();
    // odredi pravac u kom se postavlja veza
    if (pocCvor.dajPocetak().Y == krajCvor.dajPocetak().Y)
        pravac = Pravac.Hor;
    else
        pravac = Pravac.Vert;
    Prostor.orijentisi(pravac, ref prethHor, ref sledHor, ref prethVert, ref sledVert);
    if (pocCvor.dajKoordinatu(pravac) > krajCvor.dajKoordinatu(pravac))
    {
        // obrni prethodni i sledeci smer
        tmp = prethHor;
        prethHor = sledHor;
        sledHor = tmp;
    }

    List<Cvor> cvorList = dajCvorove(pocCvor, krajCvor);
    int i = 0;
    while (i < cvorList.Count - 1)
    {
        Cvor cvor = cvorList[i];
        if (cvor.dajVezu(sledHor) == null)
        {
            // kreiraj novu vezu
            Veza veza = new Veza(cvor, cvorList[i + 1], dajNoviID());
            this.veze.Add(veza);
            veze.Add(veza);
        }

        if (cvor.dajVezu(prethHor) != null && cvor.dajVezu(prethVert) == null
        && cvor.dajVezu(sledVert) == null && cvor.dajBrojPinova() == 0)
        {
            // dve veze se nadovezuju jedna na drugu, pa ih treba spojiti
            spojiVeze(cvor.dajVezu(prethHor), cvor.dajVezu(sledHor));
        }
        i++;
    }

    if (krajCvor.dajVezu(sledHor) != null && krajCvor.dajVezu(prethVert) == null
    && krajCvor.dajVezu(sledVert) == null && krajCvor.dajBrojPinova() == 0)
    {
        // u cvoru Kraj se dve veze nadovezuju jedna na drugu
        spojiVeze(krajCvor.dajVezu(prethHor), krajCvor.dajVezu(sledHor));
    }
}

https://github.com/stankela/Editor/blob/05ec1fc9b9b08494ce4f0a80bdb6e656d2a4b644/Editor/Sema.cs