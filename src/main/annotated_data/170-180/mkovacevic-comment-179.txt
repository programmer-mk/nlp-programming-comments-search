 //"logiranje" korisnika, odnosno nabavljanje tokena

public override async Task GrantResourceOwnerCredentials(OAuthGrantResourceOwnerCredentialsContext context)
{
    context.OwinContext.Response.Headers.Add("Access-Control-Allow-Origin", new[] { "*" });

    ClaimsIdentity identity = new ClaimsIdentity(OAuthDefaults.AuthenticationType);

    using (AuthRepo _repo = new AuthRepo())
    {
        IdentityUser user = await _repo.FindUser(context.UserName, context.Password);

        if (user == null)
        {
            context.SetError("invalid_grant", "The user name or password is incorrect.");
            return;
        }

        identity.AddClaim(new Claim(ClaimTypes.Name, user.UserName));
        identity.AddClaim(new Claim(ClaimTypes.NameIdentifier, user.Id));
    }

    context.Validated(identity);
}
}

https://github.com/RokoRad/LiftOff/blob/3237771050570292827c35ac6f50719945d689e1/LiftOff.API/App_Start/SimpleAuthorizationServerProvider.cs