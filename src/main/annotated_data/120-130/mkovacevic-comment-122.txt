// funkcija koja snima semu i vraca vrednost True ako je snimanje uspesno
// (snimanje moze da bude neuspesno jedino u slucaju da sema nije prethodno
// bila snimljena i da korisnik u dijalogu SaveAs(koji se poziva iz pro-
// cedure SaveAs) pritisne Cancel)


private bool Save()
{
    if (!form.saved)
        return saveAs();
    else
    {
        if (form.fileStream != null)
            form.fileStream.Dispose(); //strim se oslobadja i ponovo kreira(u sledecoj liniji
        //koda) jer se procedura Save poziva i iz procedure
        // SaveAs, a u njoj se atributu FileName dodeljuje
        // nova vrednost, tako da se ovim oslobadja stari
        // strim(sa starom vrednosti FileName) i kreira novi
        // strim(sa novom vrednosti FileName); inace, ako se
        // procedura ne poziva iz procedure SaveAs, tada,nakon
        // sto se strim oslobodi, u sledecoj liniji koda se
        // ponovo kreira isti taj strim(tj. sa istom vrednosti
        // FileName)

        // fmCreate znaci da se kreira datoteka sa specificiranim imenom, a ako
        // datoteka sa datim imenom vec postoji, otvara se samo za pisanje;
        // fmShareExclusive znaci da program ima iskljucivo pravo da koristi
        // datoteku, odnosno da drugi programi nemaju pravo da otvaraju tu
        // datoteku (pogledati Help za metod TFileStream.Create)
        form.fileStream = new FileStream(form.fileName, FileMode.Create,
            FileAccess.Write, FileShare.None);
        sema.saveToStream(new BinaryWriter(form.fileStream));
        sema.modified = false;
        form.updateInterface();
        return true;
    }
}

https://github.com/stankela/Editor/blob/05ec1fc9b9b08494ce4f0a80bdb6e656d2a4b644/Editor/EditorPresenter.cs