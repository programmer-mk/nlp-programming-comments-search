//Funkcija koja vraća korisnikovo najdraže vrijeme (doba dana iz enumeracije TimeOfDay) leta

public static TimeOfDay CalculateFavoriteFlightTime(List<FlightTime> flightTimes)
{
    var sortedTimes =
        flightTimes
        .OrderBy(ft => ft.FlightStartTime.Hour)
        .ToList();

    var morningFlights = sortedTimes
        .TakeWhile(ft => ft.FlightStartTime.Hour <= 12)
        .ToList()
        .Count;

    var afternoonFlights =
        sortedTimes
        .SkipWhile(ft => ft.FlightStartTime.Hour <= 12)
        .ToList()
        .TakeWhile(ft => ft.FlightStartTime.Hour <= 19)
        .ToList()
        .Count;

    var nightFlights =
        sortedTimes
        .SkipWhile(ft => ft.FlightStartTime.Hour <= 19)
        .ToList()
        .Count;

    if (morningFlights > afternoonFlights && morningFlights > nightFlights)
        return TimeOfDay.Morning;
    else if (afternoonFlights > morningFlights && afternoonFlights > nightFlights)
        return TimeOfDay.Afternoon;
    else
        return TimeOfDay.Night;
}


https://github.com/RokoRad/LiftOff/blob/3237771050570292827c35ac6f50719945d689e1/LiftOff.API/Logic/Statistics/StatisticsCalculator.cs