/// <summary>
/// Metoda koja služi za učitavanje podataka iz datoteke lokacija
/// </summary>
/// <param name="args"></param>

public static void UcitajPodatkeDatotekeLokacije(string[] args)
{
    string putanja = SaznajPutanjuDatLokacije(args);
    TvrtkaSingleton Tvrtka = TvrtkaSingleton.GetTvrtkaInstance();
    Console.WriteLine("\nZapočinjem čitanje datoteke lokacije.");
    string lokacijeDatotekaText = "";
    try
    {
        lokacijeDatotekaText = File.ReadAllText(putanja);
    }
    catch
    {
        Console.WriteLine("Pogreška kod čitanja datoteke lokacije.\nProvjerite da li se " +
            "datoteka nalazi na navedenoj putanji (" + putanja + ").\nIzlazak iz programa.");
        Console.ReadLine();
        Environment.Exit(0);
    }
    Console.WriteLine("Završeno čitanje datoteke lokacije." +
        "\nZapočinjem učitavanje podataka datoteke lokacije.");
    string[] nizRedakaLokacije = Datoteka.PrepoznajRetkeIzDatoteke(lokacijeDatotekaText, Datoteka.LINE_SPLIT);
    Tvrtka.ListaLokacija = DohvatiIspravneLokacije(nizRedakaLokacije, Datoteka.ATTR_SPLIT);
    if (Tvrtka.ListaLokacija.Count > 0)
        Console.WriteLine("Završeno učitavanje podataka datoteke lokacije. " +
            "(Ispravnih zapisa: " + Tvrtka.ListaLokacija.Count + ")");
    else
    {
        Console.WriteLine("Datoteka lokacije ne sadrži niti jedan ispravan zapis za osobu." +
            "\nGasim program.");
        Console.ReadLine();
        Environment.Exit(0);
    }
}

https://github.com/mmacinkov/Design-patterns/blob/d33b2791054ce02d97ee63c685a9d662c603e209/mmacinkov_zadaca_3/UcitavanjeDatoteka/LokacijeTXT.cs