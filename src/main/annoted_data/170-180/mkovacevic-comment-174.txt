//Repozitorij klasa za manipuliranje bazom podataka korisnickih racuna

public class AuthRepo : IDisposable
{
    #region dependancy management

    private LiftOffContext _context;

    private UserManager<IdentityUser> _userManager;

    public AuthRepo()
    {
        _context = new LiftOffContext();
        _userManager = new UserManager<IdentityUser>(new UserStore<IdentityUser>(_context));
    }

    public void Dispose()
    {
        _context.Dispose();
        _userManager.Dispose();
    }

    #endregion

    //Metoda za registriranje korisnickog racuna u bazu
    public async Task<IdentityResult> RegisterUser(User userModel)
    {
        IdentityUser user = new IdentityUser
        {
            UserName = userModel.UserName,
            Email = userModel.Email
        };

        var result = await _userManager.CreateAsync(user, userModel.Password);

        StatisticsUser statisticsUser = new StatisticsUser()
        {
            IdentityUserId = user.Id,
            UserName = user.UserName,
            Email = user.Email
        };

        _context.StatisticsUsers.Add(statisticsUser);
        _context.SaveChanges();

        return result;
    }

    //Metoda za pronalazak korisnika medu registriranim
    public async Task<IdentityUser> FindUser(string userName, string password)
    {
        IdentityUser user = await _userManager.FindAsync(userName, password);

        return user;
    }
}


https://github.com/RokoRad/LiftOff/blob/3237771050570292827c35ac6f50719945d689e1/LiftOff.API/Data/Repos/AuthRepo.cs