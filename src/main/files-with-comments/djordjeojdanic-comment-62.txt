/// <summary>
/// Parsira string sa zapisom decimalnog broja koji ne koristi separatore za tisuće i koji koristi decimalnu točku
/// </summary>

public static decimal CustomParseDecimal(string decimalText)
{
            decimal result = 0M;

            //Zamjena svih zareza točkom
            decimalText = decimalText.Replace(',', '.');

            //Uklanjanje svih točaka osim zadnje (koja se smatra decimalnom)
            if (decimalText.Contains("."))
            {
                while (decimalText.IndexOf('.') != decimalText.LastIndexOf('.'))
                {
                    decimalText = decimalText.Remove(decimalText.IndexOf('.'), 1);
                }
            }

            //Cijeli dio broja se sigurno može parsirati kao long
            result += long.Parse(decimalText.Split('.')[0]);

            //Parsiranje decimalnog dijela
            //Počinje se sa prvom decimalom - koeficijent 0.1
            decimal coeficient = (result < 0 ? -1 : 1) * 0.1M;
            string decimalPart = decimalText.Split('.')[1];
            for (int i = 0; i < decimalPart.Length; i++, coeficient /= 10)
            {
                result += (decimalPart[i] - '0') * coeficient;
            }

            return result;
}